#!/bin/sh

if [ ! -d ~/.keys ]; then
	mkdir ~/.keys
fi

encrypt() {
	
	FILE=`zenity --file-selection --width=800 --height=600 --filename=~/`
	if [ -z $FILE ]; then
		zenity --error --text="No file specified"
		exit
	fi

	RECIP=`zenity --entry --text="Enter recipient ID"`
	if [ -z $RECIP ]; then
		zenity --error --text="No recipient specified"
		exit
	fi

	SENDER=`zenity --entry --text="Enter sender ID"`
	if [ -z $SENDER ]; then
		zenity --error --text="No sender specified"
		exit
	fi

	PUBKEY=~/.keys/$RECIP-pubkey.curve25519
	SECKEY=~/.keys/$SENDER-secretkey.curve25519
	if jfpg -e -f "$FILE" -p $PUBKEY -k $SECKEY; then
		zenity --info --text="$FILE encrypted"
		menu
	else
		zenity --info --text="Encryption of $FILE failed"
		menu
	fi
}

decrypt() {
	FILE=`zenity --file-selection --width=800 --height=600 --filename=~/`
        if [ -z $FILE ]; then
                zenity --error --text="No file specified"
                exit
        fi

        RECIP=`zenity --entry --text="Enter recipient ID"`
        if [ -z $RECIP ]; then
                zenity --error --text="No recipient specified"
                exit
        fi

        SENDER=`zenity --entry --text="Enter sender ID"`
        if [ -z $SENDER ]; then
                zenity --error --text="No sender specified"
                exit
        fi

	PUBKEY=~/.keys/$SENDER-pubkey.curve25519
	SECKEY=~/.keys/$RECIP-secretkey.curve25519	
	if jfpg -d -f "$FILE" -p $PUBKEY -k $SECKEY; then
		zenity --info --text="$FILE decrypted"
		menu
	else
		zenity --error --text="Decryption of $FILE failed"
		menu
	fi
}

sign() {
	FILE=`zenity --file-selection --width=800 --height=600 --filename=~/`
	if [ -z $FILE ]; then
		zenity --error --text="No file specified"
		exit
	fi

	SIGN_ID=`zenity --entry --text="Enter signer's ID"`
	if [ -z $SIGN_ID ]; then
		zenity --error --text="No signer ID specified"
		exit
	fi

	SECKEY=~/.keys/$SIGN_ID-signing-secretkey.ed25519
	if jfpg -s -f "$FILE" -x $SECKEY; then
		zenity --info --text="$FILE signed"
		menu
	else
		zenity --error --text="Signing of $FILE failed"
		menu
	fi
}

verify() {
	FILE=`zenity --file-selection --width=800 --height=600 --filename=~/`
	if [ -z $FILE ]; then
		zenity --error --text="No file specified"
		exit
	fi

	SIGN_ID=`zenity --entry --text="Enter signer's ID"`
	if [ -z $SIGN_ID ]; then
		zenity --error --text="No signer ID specified"
		exit
	fi

	PUBKEY=~/.keys/$SIGN_ID-signing-pubkey.ed25519
	if jfpg -v -f "$FILE" -x $PUBKEY; then
		zenity --info --text="Good signature from $SIGN_ID"
		menu
	else
		zenity --error --text="Verification of $FILE failed"
		menu
	fi
}

new_keypair() {
	ID=`zenity --entry --text="Enter new key ID without spaces"`
	if [ -z $ID ]; then
		zenity --error --text="No ID specified"
		exit
	fi
	
	cd ~/.keys
	if jfpg -n $ID; then
		zenity --info --text="Created keys for $ID in ~/.keys"
		menu
	else
		zenity --info --text="Key generation failed"
		menu	
	fi 
}

list_keys() {
	ls -1 ~/.keys | zenity --list --width=800 --height=600 \
			--title="~/.keys" --column="Keys"
	menu
}	

delete_keys() {
	KEYLIST=`ls -1 ~/.keys | zenity --list --width=800 --height=600 \
		 --column="Keys" --separator=' ' --multiple`
	if [ -z $KEYLIST ]; then
		zenity --info --text="No keys specified for deletion"
		exit
	fi

	for i in $KEYLIST; do
		rm ~/.keys/$i
	done | zenity --progress --pulsate --auto-close
	zenity --info --text="Done deleting keys"
	menu
}

menu() {
	CHOICE=`zenity --list --width=800 --height=600 \
		--title="JFPG" --column="What to do?" \
		"Encrypt" "Decrypt" "Sign" "Verify" "New Keypair" \
		"List Keys" "Delete Keys"`

	case $CHOICE in
		"Encrypt") encrypt;;
		"Decrypt") decrypt;;
		"Sign") sign;;
		"Verify") verify;;
		"New Keypair") new_keypair;;
		"List Keys") list_keys;;
		"Delete Keys") delete_keys;;
	esac
}

menu
